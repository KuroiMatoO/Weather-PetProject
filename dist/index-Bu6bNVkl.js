(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))l(n);new MutationObserver(n=>{for(const a of n)if(a.type==="childList")for(const c of a.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&l(c)}).observe(document,{childList:!0,subtree:!0});function o(n){const a={};return n.integrity&&(a.integrity=n.integrity),n.referrerPolicy&&(a.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?a.credentials="include":n.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function l(n){if(n.ep)return;n.ep=!0;const a=o(n);fetch(n.href,a)}})();function H(r,e,o,l,n,a){l?n>0?r.src="img/Day_rain.png":a>0?r.src="img/Day_snow.png":e>=30&&o==0?r.src="img/Day_cloudy.png":r.src="img/Day.png":n>0&&o>0?r.src="img/Night_rain.png":a>0&&o>0?r.src="img/Night_snow.png":e>=30&&o==0?r.src="img/Night_cloudy.png":r.src="img/Night.png"}function M(r,e,o,l,n){l>0?r.src="img/Day_rain.png":n>0?r.src="img/Day_snow.png":e<.8*o?r.src="img/Day_cloudy.png":r.src="img/Day.png"}async function $(){const e=await fetch("https://api.bigdatacloud.net/data/reverse-geocode-client?localityLanguage=en");if(!e.ok)throw new Error("Location API request failed");return e.json()}async function P(r,e){const o=`https://api.open-meteo.com/v1/forecast?latitude=${r}&longitude=${e}&current=temperature_2m,relative_humidity_2m,is_day,precipitation,rain,snowfall,cloud_cover,pressure_msl,wind_speed_10m&hourly=temperature_2m&daily=temperature_2m_max,sunshine_duration,temperature_2m_min,precipitation_sum,rain_sum,showers_sum,snowfall_sum&wind_speed_unit=ms&forecast_days=16`,l=await fetch(o);if(!l.ok)throw new Error("Weather API request failed");return l.json()}async function A(){try{const r=await $(),e=await P(r.latitude,r.longitude),o=new Date;console.log(r),console.log(e);const l=String(o.getHours()).padStart(2,"0"),n=String(o.getMinutes()).padStart(2,"0"),a=e.current.cloud_cover,c=e.current.precipitation,p=e.current.is_day,f=e.current.rain,g=e.current.snowfall;let y=document.querySelector("#icon img");y=H(y,a,c,p,f,g),document.querySelector("#temperature").innerHTML=Math.round(e.current.temperature_2m)+"°",document.querySelector("#time").innerHTML=`${l}:${n}`;const h={month:"long",day:"numeric",weekday:"long"};document.querySelector("#date").innerHTML=new Intl.DateTimeFormat("en-US",h).format(o),document.querySelector("#location").innerHTML=`${r.countryCode}, ${r.city}`,document.querySelector("#wind").innerHTML=`Wind: ${e.current.wind_speed_10m} m/s`,document.querySelector("#humidity").innerHTML=`Humidity: ${e.current.relative_humidity_2m}%`,document.querySelector("#pressure").innerHTML="Pressure: "+Math.round(e.current.pressure_msl*.7500637554)+" mm";let _=document.querySelectorAll(".charts-css th"),w=document.querySelectorAll(".area td .data"),u=document.querySelectorAll(".area td"),m=document.querySelectorAll(".line td"),s=new Date().getHours();for(let t=0;t<10;t++)t==0&&(console.log("nowTime = "+s),u[t].style.setProperty("--start",`calc(${e.hourly.temperature_2m[s-2]}/30)`),u[t].style.setProperty("--end",`calc(${e.hourly.temperature_2m[s]}/30)`),m[t].style.setProperty("--start",`calc(${e.hourly.temperature_2m[s-2]}/30)`),m[t].style.setProperty("--end",`calc(${e.hourly.temperature_2m[s]}/30)`),console.log(e.hourly.temperature_2m[s-1])),u[t].style.setProperty("--start",`calc(${e.hourly.temperature_2m[s]}/30)`),u[t].style.setProperty("--end",`calc(${e.hourly.temperature_2m[s+2]}/30)`),m[t].style.setProperty("--start",`calc(${e.hourly.temperature_2m[s]}/30)`),m[t].style.setProperty("--end",`calc(${e.hourly.temperature_2m[s+2]}/30)`),t<9&&(w[t].innerHTML=Math.round(e.hourly.temperature_2m[s])+"°",s=s+2);for(let t=0;t<9;t++){let i=new Date(o);i.setHours(o.getHours()+2*t),_[t].innerHTML=`${i.getHours()}:00`}let S=document.querySelectorAll(".daily_date"),D=document.querySelectorAll(".day img"),L=document.querySelectorAll(".daily_temp"),d=e.daily.sunshine_duration,T=d.reduce((t,i)=>t+i,0)/d.length;for(let t=0;t<7;t++){let i=new Date(o);i.setDate(o.getDate()+t);const q={month:"long",day:"numeric"};S[t].innerHTML=new Intl.DateTimeFormat("en-US",q).format(i),M(D[t],d[t],T,e.daily.rain_sum[t],e.daily.snowfall_sum[t]),L[t].innerHTML=Math.round((e.daily.temperature_2m_max[t]+e.daily.temperature_2m_min[t])/2)+"°"}}catch(r){console.error(r)}}A();
